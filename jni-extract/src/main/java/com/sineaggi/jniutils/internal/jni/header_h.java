// Generated by jextract

package com.sineaggi.jniutils.internal.jni;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class header_h  {

    public static final OfByte C_CHAR = JAVA_BYTE;
    public static final OfShort C_SHORT = JAVA_SHORT;
    public static final OfInt C_INT = JAVA_INT;
    public static final OfInt C_LONG = JAVA_INT;
    public static final OfLong C_LONG_LONG = JAVA_LONG;
    public static final OfFloat C_FLOAT = JAVA_FLOAT;
    public static final OfDouble C_DOUBLE = JAVA_DOUBLE;
    public static final OfAddress C_POINTER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * #define JNI_FALSE 0
     * }
     */
    public static int JNI_FALSE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define JNI_TRUE 1
     * }
     */
    public static int JNI_TRUE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define JNI_OK 0
     * }
     */
    public static int JNI_OK() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define JNI_COMMIT 1
     * }
     */
    public static int JNI_COMMIT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define JNI_ABORT 2
     * }
     */
    public static int JNI_ABORT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define JNI_VERSION_1_1 65537
     * }
     */
    public static int JNI_VERSION_1_1() {
        return (int)65537L;
    }
    /**
     * {@snippet :
     * #define JNI_VERSION_1_2 65538
     * }
     */
    public static int JNI_VERSION_1_2() {
        return (int)65538L;
    }
    /**
     * {@snippet :
     * #define JNI_VERSION_1_4 65540
     * }
     */
    public static int JNI_VERSION_1_4() {
        return (int)65540L;
    }
    /**
     * {@snippet :
     * #define JNI_VERSION_1_6 65542
     * }
     */
    public static int JNI_VERSION_1_6() {
        return (int)65542L;
    }
    /**
     * {@snippet :
     * #define JNI_VERSION_1_8 65544
     * }
     */
    public static int JNI_VERSION_1_8() {
        return (int)65544L;
    }
    /**
     * {@snippet :
     * #define JNI_VERSION_9 589824
     * }
     */
    public static int JNI_VERSION_9() {
        return (int)589824L;
    }
    /**
     * {@snippet :
     * #define JNI_VERSION_10 655360
     * }
     */
    public static int JNI_VERSION_10() {
        return (int)655360L;
    }
    /**
     * {@snippet :
     * #define JNI_VERSION_19 1245184
     * }
     */
    public static int JNI_VERSION_19() {
        return (int)1245184L;
    }
    /**
     * {@snippet :
     * #define JNI_VERSION_20 1310720
     * }
     */
    public static int JNI_VERSION_20() {
        return (int)1310720L;
    }
    /**
     * {@snippet :
     * #define JAWT_LOCK_ERROR 1
     * }
     */
    public static int JAWT_LOCK_ERROR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define JAWT_LOCK_CLIP_CHANGED 2
     * }
     */
    public static int JAWT_LOCK_CLIP_CHANGED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define JAWT_LOCK_BOUNDS_CHANGED 4
     * }
     */
    public static int JAWT_LOCK_BOUNDS_CHANGED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define JAWT_LOCK_SURFACE_CHANGED 8
     * }
     */
    public static int JAWT_LOCK_SURFACE_CHANGED() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define JAWT_VERSION_1_3 65539
     * }
     */
    public static int JAWT_VERSION_1_3() {
        return (int)65539L;
    }
    /**
     * {@snippet :
     * #define JAWT_VERSION_1_4 65540
     * }
     */
    public static int JAWT_VERSION_1_4() {
        return (int)65540L;
    }
    /**
     * {@snippet :
     * #define JAWT_VERSION_1_7 65543
     * }
     */
    public static int JAWT_VERSION_1_7() {
        return (int)65543L;
    }
    /**
     * {@snippet :
     * #define JAWT_VERSION_9 589824
     * }
     */
    public static int JAWT_VERSION_9() {
        return (int)589824L;
    }
    /**
     * {@snippet :
     * typedef unsigned char jboolean;
     * }
     */
    public static final OfByte jboolean = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned short jchar;
     * }
     */
    public static final OfShort jchar = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef short jshort;
     * }
     */
    public static final OfShort jshort = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef float jfloat;
     * }
     */
    public static final OfFloat jfloat = JAVA_FLOAT;
    /**
     * {@snippet :
     * typedef double jdouble;
     * }
     */
    public static final OfDouble jdouble = JAVA_DOUBLE;
    /**
     * {@snippet :
     * typedef long jsize;
     * }
     */
    public static final OfInt jsize = JAVA_INT;
    /**
     * {@snippet :
     * typedef struct _jobject* jobject;
     * }
     */
    public static final OfAddress jobject = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jobject* jclass;
     * }
     */
    public static final OfAddress jclass = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jobject* jthrowable;
     * }
     */
    public static final OfAddress jthrowable = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jobject* jstring;
     * }
     */
    public static final OfAddress jstring = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jobject* jarray;
     * }
     */
    public static final OfAddress jarray = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jobject* jbooleanArray;
     * }
     */
    public static final OfAddress jbooleanArray = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jobject* jbyteArray;
     * }
     */
    public static final OfAddress jbyteArray = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jobject* jcharArray;
     * }
     */
    public static final OfAddress jcharArray = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jobject* jshortArray;
     * }
     */
    public static final OfAddress jshortArray = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jobject* jintArray;
     * }
     */
    public static final OfAddress jintArray = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jobject* jlongArray;
     * }
     */
    public static final OfAddress jlongArray = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jobject* jfloatArray;
     * }
     */
    public static final OfAddress jfloatArray = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jobject* jdoubleArray;
     * }
     */
    public static final OfAddress jdoubleArray = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jobject* jobjectArray;
     * }
     */
    public static final OfAddress jobjectArray = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jobject* jweak;
     * }
     */
    public static final OfAddress jweak = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jfieldID* jfieldID;
     * }
     */
    public static final OfAddress jfieldID = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _jmethodID* jmethodID;
     * }
     */
    public static final OfAddress jmethodID = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _jobjectType.JNIInvalidRefType = 0;
     * }
     */
    public static int JNIInvalidRefType() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _jobjectType.JNILocalRefType = 1;
     * }
     */
    public static int JNILocalRefType() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _jobjectType.JNIGlobalRefType = 2;
     * }
     */
    public static int JNIGlobalRefType() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _jobjectType.JNIWeakGlobalRefType = 3;
     * }
     */
    public static int JNIWeakGlobalRefType() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef struct JNINativeInterface_* JNIEnv;
     * }
     */
    public static final OfAddress JNIEnv = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct JNIInvokeInterface_* JavaVM;
     * }
     */
    public static final OfAddress JavaVM = RuntimeHelper.POINTER;
    public static MethodHandle JNI_GetDefaultJavaVMInitArgs$MH() {
        return RuntimeHelper.requireNonNull(constants$96.const$4,"JNI_GetDefaultJavaVMInitArgs");
    }
    /**
     * {@snippet :
     * long JNI_GetDefaultJavaVMInitArgs(void* args);
     * }
     */
    public static int JNI_GetDefaultJavaVMInitArgs(MemorySegment args) {
        var mh$ = JNI_GetDefaultJavaVMInitArgs$MH();
        try {
            return (int)mh$.invokeExact(args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JNI_CreateJavaVM$MH() {
        return RuntimeHelper.requireNonNull(constants$96.const$5,"JNI_CreateJavaVM");
    }
    /**
     * {@snippet :
     * long JNI_CreateJavaVM(struct JNIInvokeInterface_*** pvm, void** penv, void* args);
     * }
     */
    public static int JNI_CreateJavaVM(MemorySegment pvm, MemorySegment penv, MemorySegment args) {
        var mh$ = JNI_CreateJavaVM$MH();
        try {
            return (int)mh$.invokeExact(pvm, penv, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JNI_GetCreatedJavaVMs$MH() {
        return RuntimeHelper.requireNonNull(constants$97.const$1,"JNI_GetCreatedJavaVMs");
    }
    /**
     * {@snippet :
     * long JNI_GetCreatedJavaVMs(struct JNIInvokeInterface_***, long, long*);
     * }
     */
    public static int JNI_GetCreatedJavaVMs(MemorySegment x0, int x1, MemorySegment x2) {
        var mh$ = JNI_GetCreatedJavaVMs$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JNI_OnLoad$MH() {
        return RuntimeHelper.requireNonNull(constants$97.const$2,"JNI_OnLoad");
    }
    /**
     * {@snippet :
     * long JNI_OnLoad(struct JNIInvokeInterface_** vm, void* reserved);
     * }
     */
    public static int JNI_OnLoad(MemorySegment vm, MemorySegment reserved) {
        var mh$ = JNI_OnLoad$MH();
        try {
            return (int)mh$.invokeExact(vm, reserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JNI_OnUnload$MH() {
        return RuntimeHelper.requireNonNull(constants$97.const$3,"JNI_OnUnload");
    }
    /**
     * {@snippet :
     * void JNI_OnUnload(struct JNIInvokeInterface_** vm, void* reserved);
     * }
     */
    public static void JNI_OnUnload(MemorySegment vm, MemorySegment reserved) {
        var mh$ = JNI_OnUnload$MH();
        try {
            mh$.invokeExact(vm, reserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JAWT_GetAWT$MH() {
        return RuntimeHelper.requireNonNull(constants$104.const$5,"JAWT_GetAWT");
    }
    /**
     * {@snippet :
     * unsigned char JAWT_GetAWT(struct JNINativeInterface_** env, struct jawt* awt);
     * }
     */
    public static byte JAWT_GetAWT(MemorySegment env, MemorySegment awt) {
        var mh$ = JAWT_GetAWT$MH();
        try {
            return (byte)mh$.invokeExact(env, awt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * #define JNI_ERR -1
     * }
     */
    public static int JNI_ERR() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define JNI_EDETACHED -2
     * }
     */
    public static int JNI_EDETACHED() {
        return (int)-2L;
    }
    /**
     * {@snippet :
     * #define JNI_EVERSION -3
     * }
     */
    public static int JNI_EVERSION() {
        return (int)-3L;
    }
    /**
     * {@snippet :
     * #define JNI_ENOMEM -4
     * }
     */
    public static int JNI_ENOMEM() {
        return (int)-4L;
    }
    /**
     * {@snippet :
     * #define JNI_EEXIST -5
     * }
     */
    public static int JNI_EEXIST() {
        return (int)-5L;
    }
    /**
     * {@snippet :
     * #define JNI_EINVAL -6
     * }
     */
    public static int JNI_EINVAL() {
        return (int)-6L;
    }
}


